#ifndef CROCO__UTILS__MATH_H
#define CROCO__UTILS__MATH_H

#include <cmath>


// --------------------------------------------------------------------------
inline float max( float a, float b )
// --------------------------------------------------------------------------
{
  return ( (a > b) ? a : b );
}


// --------------------------------------------------------------------------
inline float min( float a, float b )
// --------------------------------------------------------------------------
{
  return ( (a < b) ? a : b );
}


// --------------------------------------------------------------------------
inline float deg2rad( float deg )
// --------------------------------------------------------------------------
{
  return ( (deg / 180.0) * M_PI );
}


// --------------------------------------------------------------------------
inline float rad2deg( float rad )
// --------------------------------------------------------------------------
{
  return ( (rad / M_PI) * 180.0 );
}


/** Return the absolute float value */
// --------------------------------------------------------------------------
inline float floatabs( float i )
// --------------------------------------------------------------------------
{
  if ( i > 0 )
    return  i;
  else
    return -i;
}


// returns absolute int value
// --------------------------------------------------------------------------
inline int intabs( int i )
// --------------------------------------------------------------------------
{
  if ( i > 0 )
    return  i;
  else
    return -i;
}


// fast double maximum selection
// --------------------------------------------------------------------------
inline double dmax( double a, double b )
// --------------------------------------------------------------------------
{
  return a < b ? b : a;
}

// fast double minimum selection
// --------------------------------------------------------------------------
inline double dmin( double a, double b )
// --------------------------------------------------------------------------
{
  return a < b ? a : b;
}


// fast maximum selection
// --------------------------------------------------------------------------
inline int max ( int i, int j )
// --------------------------------------------------------------------------
{
  return ((i>j)?i:j);
}


// fast minimum selection
// --------------------------------------------------------------------------
inline int min ( int i, int j )
// --------------------------------------------------------------------------
{
  return ((i>j)?j:i);
}


// do a fast square
// --------------------------------------------------------------------------
inline double sqr( double x )
// --------------------------------------------------------------------------
{
  return (x*x);
}


// --------------------------------------------------------------------------
inline float sqr( float x )
// --------------------------------------------------------------------------
{
  return (x*x);
}


// --------------------------------------------------------------------------
inline int sqr( int x )
// --------------------------------------------------------------------------
{
  return (x*x);
}


// do a fast cubicle
// --------------------------------------------------------------------------
inline int cube( const int x )
// --------------------------------------------------------------------------
{
  return x * x * x;
}


// --------------------------------------------------------------------------
inline float cube( const float x )
// --------------------------------------------------------------------------
{
  return x * x * x;
}


// --------------------------------------------------------------------------
inline double cube( const double x )
// --------------------------------------------------------------------------
{
  return x * x * x;
}


/**
 * Kleine Rundungsfunktion, die es leider nicht in der math.h gibt.
 * round(4.4)=4.0, round(4.5)=5.0, round(4.6)=5.0
 *
 * @param i Float der gerundet werden soll.
 *
 * @return Gerundete Zahl.
 */
// --------------------------------------------------------------------------
inline float round(float i)
// --------------------------------------------------------------------------
{
//  float result;
//
//  if( fmod(i,1) > 0.5 ){
//    result = ceil(i);
//  } else {
//    result = floor(i);
//  }
//
//  return result;

  // AK:
  return floor(i+0.5);
}


// --------------------------------------------------------------------------
inline float sign( float a )
// --------------------------------------------------------------------------
{
  return ( a > 0 ? 1.0 :
           ( a == 0 ? 0.0 :
            -1.0));
}

#endif // CROCO__UTILS__MATH_H
